# Production-Ready Zero-Trust mTLS Architecture
# 
# This docker-compose demonstrates production-level security:
# - Strict certificate validation with proper CA chain
# - Private keys with secure permissions (0600)
# - Full mTLS between all services
# - No development backdoors or relaxed security

services:
  # Platform Service (Production Security)
  platform:
    build:
      context: services
      dockerfile: Dockerfile.platform
    container_name: crank-platform-prod
    ports:
      - "8443:8443"  # HTTPS ONLY - no HTTP port
    volumes:
      - ./certs-production:/etc/certs:ro  # Read-only certificate mount
    environment:
      - PLATFORM_ENV=docker
      - CRANK_ENVIRONMENT=production  # ðŸ”’ STRICT: Full certificate validation
      - LOG_LEVEL=INFO
      - PLATFORM_HTTPS_PORT=8443
      - HTTPS_ONLY=true
      - CERT_VALIDATION=strict  # ðŸ”’ Enforce strict certificate validation
      - PLATFORM_AUTH_TOKEN=prod-mesh-key-v1  # ðŸ”’ Production auth token
    healthcheck:
      test: ["CMD", "curl", "--cacert", "/etc/certs/ca.crt", "--cert", "/etc/certs/client.crt", "--key", "/etc/certs/client.key", "-f", "https://localhost:8443/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - crank-net-prod
    restart: unless-stopped

  # Document Converter (Production Security)
  crank-doc-converter:
    build:
      context: services
      dockerfile: Dockerfile.crank-doc-converter
    container_name: crank-doc-converter-prod
    ports:
      - "8101:8101"  # HTTPS ONLY
    volumes:
      - ./certs-production:/etc/certs:ro  # Read-only certificate mount
    environment:
      - PLATFORM_URL=https://platform:8443
      - CRANK_ENVIRONMENT=production  # ðŸ”’ STRICT: Full certificate validation
      - LOG_LEVEL=INFO
      - PLATFORM_AUTH_TOKEN=prod-mesh-key-v1  # ðŸ”’ Production auth token
      - DOC_CONVERTER_HTTPS_PORT=8101
      - DOC_CONVERTER_HOST=0.0.0.0
      - HTTPS_ONLY=true
      - CERT_VALIDATION=strict  # ðŸ”’ Enforce strict certificate validation
    depends_on:
      platform:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--cacert", "/etc/certs/ca.crt", "--cert", "/etc/certs/client.crt", "--key", "/etc/certs/client.key", "-f", "https://localhost:8101/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 25s
    networks:
      - crank-net-prod
    restart: unless-stopped

  # Email Classifier (Production Security)
  crank-email-classifier:
    build:
      context: services
      dockerfile: Dockerfile.crank-email-classifier
    container_name: crank-email-classifier-prod
    ports:
      - "8201:8201"  # HTTPS ONLY
    volumes:
      - ./certs-production:/etc/certs:ro  # Read-only certificate mount
    environment:
      - PLATFORM_URL=https://platform:8443
      - CRANK_ENVIRONMENT=production  # ðŸ”’ STRICT: Full certificate validation
      - LOG_LEVEL=INFO
      - PLATFORM_AUTH_TOKEN=prod-mesh-key-v1  # ðŸ”’ Production auth token
      - EMAIL_CLASSIFIER_HTTPS_PORT=8201
      - EMAIL_CLASSIFIER_HOST=0.0.0.0
      - HTTPS_ONLY=true
      - CERT_VALIDATION=strict  # ðŸ”’ Enforce strict certificate validation
    depends_on:
      platform:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--cacert", "/etc/certs/ca.crt", "--cert", "/etc/certs/client.crt", "--key", "/etc/certs/client.key", "-f", "https://localhost:8201/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s  # ML models need time
    networks:
      - crank-net-prod
    restart: unless-stopped

networks:
  crank-net-prod:
    driver: bridge
    name: crank-network-production

# Production deployment notes:
# 1. Certificates must be pre-generated with proper CA chain
# 2. Private keys have secure permissions (0600)
# 3. No world-readable private keys
# 4. No development backdoors or relaxed verification
# 5. All inter-service communication uses full mTLS
# 6. Health checks use proper client certificates