# CrankDoc Worker Container
FROM python:3.12-slim

# Create non-root user
RUN addgroup --gid 1000 worker && \
    adduser --uid 1000 --gid 1000 --disabled-password worker

# Install system dependencies needed for document processing
RUN apt-get update && apt-get install -y \
    curl \
    pandoc \
    texlive-latex-base \
    texlive-latex-extra \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install Python dependencies (worker-specific)
COPY requirements-crank-doc-converter.txt .
RUN pip install --no-cache-dir -r requirements-crank-doc-converter.txt

# Copy worker code and metadata
COPY crank_doc_converter.py .
COPY crankdoc_mesh_minimal.py .
COPY security_config.py .
COPY crank-doc-converter.plugin.yaml ./plugin.yaml

# Copy certificate initialization script (needed for in-process initialization)
COPY initialize_certificates.py ./scripts/

# Create certificates directory with proper ownership
RUN mkdir -p /etc/certs && chown worker:worker /etc/certs

# Create simplified startup script - NO subprocess initialization
RUN echo '#!/usr/bin/env python3' > run_worker.py && \
    echo '# Simple direct startup - certificate initialization in main()' >> run_worker.py && \
    echo 'import crank_doc_converter' >> run_worker.py && \
    echo 'crank_doc_converter.main()' >> run_worker.py && \
    chmod +x run_worker.py

# Security hardening
USER worker

# Expose worker HTTPS port
EXPOSE 8101

# Health check for HTTPS-only mode
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD curl -k -f https://localhost:${DOC_CONVERTER_HTTPS_PORT:-8101}/health || exit 1

# Run worker with in-process certificate initialization
CMD ["python", "run_worker.py"]